apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'org.greenrobot.greendao'
apply from: 'jacoco.gradle'


android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    signingConfigs {
//        release {
//            storeFile file(RELEASE_STORE_FILE)
//            storePassword RELEASE_STORE_PASSWORD
//            keyAlias RELEASE_KEY_ALIAS
//            keyPassword RELEASE_KEY_PASSWORD
//        }
    }
    defaultConfig {
        applicationId "json.chao.com.wanandroid"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        //AndroidJunitRunner必须要显示指定在defaultConfig中，使用Gradle依赖管理无法使其生效
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        renderscriptTargetApi rootProject.ext.android["renderscriptTargetApi"]
        renderscriptSupportModeEnabled true    // Enable RS support
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
        }
        debug {
//            signingConfig signingConfigs.release
        }
    }

    testOptions {
        unitTests {
            // Fix unit test resources not included with AS3
            includeAndroidResources = true
        }
    }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        flavorDimensions "code"
        productFlavors {
        }

        packagingOptions {
            exclude 'META-INF/services/javax.annotation.processing.Processor'
        }

        dexOptions {
            jumboMode true
            javaMaxHeapSize "4g"
        }
    }

    greendao {
        schemaVersion 1
        targetGenDir 'src/main/java'
        daoPackage 'json.chao.com.wanandroid.core.dao'
    }

    dependencies {
        implementation fileTree(include: ['*.jar'], dir: 'libs')

        //base
        implementation rootProject.ext.dependencies["appcompat-v7"]
        implementation rootProject.ext.dependencies["cardview-v7"]
        implementation rootProject.ext.dependencies["support-v4"]
        implementation rootProject.ext.dependencies["design"]
        implementation rootProject.ext.dependencies["constraint-layout"]

        //ui
        implementation rootProject.ext.dependencies["SmartRefreshLayout"]
        implementation rootProject.ext.dependencies["SmartRefreshHeader"]
        implementation rootProject.ext.dependencies["banner"]
        implementation rootProject.ext.dependencies["FlycoTabLayout_Lib"]
        implementation rootProject.ext.dependencies["VerticalTabLayout"]
        implementation rootProject.ext.dependencies["flowlayout-lib"]
        implementation rootProject.ext.dependencies["agentweb"]

        //net
        implementation rootProject.ext.dependencies["gson"]
        implementation rootProject.ext.dependencies["okhttp"]
        implementation rootProject.ext.dependencies["logging-interceptor"]
        implementation rootProject.ext.dependencies["retrofit"]
        implementation rootProject.ext.dependencies["converter-gson"]
        implementation rootProject.ext.dependencies["adapter-rxjava2"]
        implementation rootProject.ext.dependencies["glide"]
        annotationProcessor rootProject.ext.dependencies["glide_compiler"]

        //dao
        implementation rootProject.ext.dependencies["greendao"]

        //rx
        implementation rootProject.ext.dependencies["rxjava"]
        implementation rootProject.ext.dependencies["rxandroid"]
        implementation rootProject.ext.dependencies["rxbinding"]
        implementation rootProject.ext.dependencies["rxpermissions"]

        //di
        implementation rootProject.ext.dependencies["dagger"]
        annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
        implementation rootProject.ext.dependencies["dagger-android"]
        implementation rootProject.ext.dependencies["dagger-android-support"]
        annotationProcessor rootProject.ext.dependencies["dagger-android-processor"]
        implementation rootProject.ext.dependencies["javax_annotation"]
        implementation rootProject.ext.dependencies["butterknife"]
        annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]

        //multidex
        implementation rootProject.ext.dependencies["multidex"]

        //other
        implementation rootProject.ext.dependencies["lottie"]
        implementation rootProject.ext.dependencies["BaseRecyclerViewAdapterHelper"]
        implementation rootProject.ext.dependencies["fragmentation"]
        implementation rootProject.ext.dependencies["fragmentation-swipeback"]
        implementation rootProject.ext.dependencies["crashreport_upgrade"]
        implementation rootProject.ext.dependencies["logger"]
        implementation rootProject.ext.dependencies["ByeBurger"]
        implementation 'com.facebook.stetho:stetho:1.5.0'
        implementation 'com.facebook.stetho:stetho-okhttp3:1.4.2'

        //canary
        debugImplementation rootProject.ext.dependencies["leakcanary-android"]
        releaseImplementation rootProject.ext.dependencies["leakcanary-android-no-op"]
        testImplementation rootProject.ext.dependencies["leakcanary-android-no-op"]

        //UI测试
        implementation("com.android.support.test.espresso:espresso-idling-resource:3.0.2") {
            exclude module: 'support-annotations'
        }
        androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
            exclude group: 'com.android.support', module: 'support-annotations'
        })
        androidTestImplementation("com.android.support.test.espresso:espresso-idling-resource:3.0.2") {
            exclude module: 'support-annotations'
        }
        androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.2'
        androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.0.2'
        androidTestImplementation 'com.android.support.test.espresso:espresso-accessibility:3.0.2'
        androidTestImplementation 'com.android.support.test.espresso:espresso-web:3.0.2'
        androidTestImplementation 'com.android.support.test.espresso.idling:idling-concurrent:3.0.2'

        //unit test
        testImplementation rootProject.ext.dependencies["junit"]
        testImplementation rootProject.ext.dependencies["mockito"]
        testImplementation "org.powermock:powermock-module-junit4:1.7.4"
        testImplementation "org.powermock:powermock-module-junit4-rule:1.7.4"
        testImplementation "org.powermock:powermock-api-mockito2:1.7.4" //注意这里是mockito2
        testImplementation "org.powermock:powermock-classloading-xstream:1.7.4"
        testImplementation "org.robolectric:robolectric:3.8"
        testImplementation 'org.robolectric:shadows-support-v4:3.4-rc2'
        testImplementation "org.robolectric:shadows-multidex:3.+" //支持Multidex功能
        androidTestImplementation rootProject.ext.dependencies["runner"]
        androidTestImplementation 'com.android.support.test:rules:1.0.2'

        implementation rootProject.ext.dependencies["kotlin-stdlib"]

    }

//解决支持库版本不兼容问题
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '25.3.0'
            }
        }
    }
}
repositories {
    mavenCentral()
}